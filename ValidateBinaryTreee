import java.util.Stack;
/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public boolean isValidBST(TreeNode root) {
        if(root== null) {
			return true;
		}
		
		TreeNode curr = root;
		Stack<TreeNode> stack = new Stack(); 
		long left_data = Long.MIN_VALUE;
		
		while(curr != null || stack.size() > 0) {
			while(curr != null) {
				stack.push(curr);
				curr = curr.left;
			}
			curr = stack.pop();
			if(curr.val <= left_data) {
				return false;
			}
			left_data = curr.val;
			//System.out.println(curr.val);
			curr = curr.right;
			
		}
		return true;
    }
}
